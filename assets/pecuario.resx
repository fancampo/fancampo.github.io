<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="beneficio_1" xml:space="preserve">
    <value>Asistencia Veterinaria: Algunas pólizas ofrecen servicios de asistencia veterinaria programada, contribuyendo al bienestar y mantenimiento preventivo de la salud del ganado.</value>
  </data>
  <data name="beneficio_2" xml:space="preserve">
    <value>Gestión de Riesgos: FanCampo provee asesoramiento en gestión de riesgos agropecuarios, ayudando a los ganaderos a implementar prácticas que minimicen la posibilidad de siniestros.</value>
  </data>
  <data name="beneficio_3" xml:space="preserve">
    <value>Indemnización Rápida: Compromiso con procesos ágiles de verificación y compensación, entendiendo la importancia de la continuidad operativa para el negocio agropecuario.</value>
  </data>
  <data name="cobertura_1" xml:space="preserve">
    <value>Muerte por enfermedad o accidente: Compensa al asegurado por la pérdida de animales debido a enfermedades o accidentes, incluyendo aquellos causados por fenómenos naturales</value>
  </data>
  <data name="cobertura_2" xml:space="preserve">
    <value>Robo: Ofrece indemnización en caso de robo del ganado asegurado, un riesgo significativo en diversas regiones.</value>
  </data>
  <data name="cobertura_3" xml:space="preserve">
    <value>Gastos Veterinarios: Cubre los gastos generados por atención veterinaria en caso de enfermedad o accidente, promoviendo la recuperación del animal sin afectar significativamente la economía del ganadero.</value>
  </data>
  <data name="cover" xml:space="preserve">
    <value>pecuario_cover.jpg</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>El seguro pecuario de FanCampo está diseñado para proteger el patrimonio de los ganaderos ante diversos riesgos que pueden afectar la salud y vida de sus animales. Este tipo de seguro cubre una amplia gama de especies, desde ganado bovino, porcino, ovino, hasta aves de corral y otros animales dedicados a la producción agropecuaria.</value>
  </data>
  <data name="title" xml:space="preserve">
    <value>Seguro Pecuario</value>
  </data>
  <data name="ventaja_1" xml:space="preserve">
    <value>Experiencia y Especialización: FanCampo cuenta con años de experiencia y un enfoque especializado en el sector agropecuario, lo que garantiza un profundo entendimiento de las necesidades y desafíos de los ganaderos.</value>
  </data>
  <data name="ventaja_2" xml:space="preserve">
    <value>Personalización: Capacidad de adaptar las coberturas a las necesidades específicas de cada explotación, considerando el tipo de ganado, tamaño de la operación y riesgos particulares de la región.</value>
  </data>
  <data name="ventaja_3" xml:space="preserve">
    <value>Soporte y Confianza: Más allá de una aseguradora, FanCampo se posiciona como un socio estratégico para los ganaderos, ofreciendo soporte continuo y asesoría experta.</value>
  </data>
</root>